#include <bits/stdc++.h>
#define sz(v)   ((int)(v).size())
#define  all(v)    ((v).begin()),((v).end())
#define  allr(v)    ((v).rbegin()),((v).rend())
#define   pb         push_back
#define   mp         make_pair
#define   mt         make_tuple
//#define   Y            imag()
//#define   X            real()
#define    clr(v,d)      memset( v, d ,sizeof(v))
#define   angle(n)      atan2((n.imag()),(n.real()))
#define   vec(a,b)       ((b)-(a))
//#define   length(a)      hypot( (a.imag()),(a.real()) )
#define   normalize(a)      (a)/(length(a))
//#define    dp(a,b)          (((conj(a))*(b)).real())
//#define    cp(a,b)          (((conj(a))*(b)).imag())
#define    lengthsqrt(a)       dp(a,a)
#define    rotate0( a,ang)    ((a)*exp( point(0,ang) ))
#define    rotateA(about,p,ang)   (rotate0(vec(about,p),ang)+about)
#define    lcm(a,b)                ((a*b)/(__gcd(a,b)))
#define    reflection0(m,v)         (conj((v)/(m))*(m))
#define     reflectionA(m,v,p0)     (conj( (vec(p0,v))/(vec(p0,m)) ) * (vec(p0,m)) ) + p0
//#define     same(p1,p2)               ( dp(  vec(p1,p2),vec(p1,p2)) < eps )
#define     PT                    complex<double>
#define outfile freopen("out.out", "w", stdout);
#define infile  freopen("in.in", "r", stdin);
#define PI acos(-1)
#define scani(n)  scanf("%d",&n)
//#define scans(st) scanf("%s",st)
#define gc getchar_unlocked
typedef  long long     ll ;
typedef  unsigned long long ull;
const double eps= (1e-9);
using namespace std;
int dcmp(long double a,long double b){   return fabsl(a-b)<=eps ? 0: (a>b)? 1:-1  ;}
int getBit(int num, int idx) {return ((num >> idx) & 1) == 1;}
int setBit1(int num, int idx) {return num | (1<<idx);}
ll setBit0(ll num, int idx) {return num & ~(1ll<<idx);}
ll flipBit(int num, int idx) {return num ^ (1<<idx);}
void FS(){ ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);}
int ask(int x1,int y1,int x2,int y2)
{
    cout<<"? "<<x1<<" "<<y1<<" "<<x2<<" "<<y2<<endl;
    fflush(stdout);
    int ans;
    cin>>ans;
    return ans;
}
bool check(int mid,int x,int fl)
{
    if(fl==1)
    {
        int ret=ask(x,1,x,mid);
        return (ret%2==0);
    }
    else
    {
        int ret=ask(1,x,mid,x);
        return (ret%2==0);
    }
}
int BS(int l,int r,int x,int fl)
{
    int ans=0;
    while(l<=r)
    {
        int mid=(l+r)/2;
        if(check(mid,x,fl))
        {
            l=mid+1;
        }
        else
        {
            ans=mid;
            r=mid-1;
        }
    }
    return ans;
}
int main()
{

    int n;
    cin>>n;
    vector<int> v1,v2;
    for(int i=1;i<=n;i++)
    {
        int ret=ask(1,i,n,i);
        if(ret%2!=0)
        {
            v2.pb(i);
        }
    }
    for(int i=1;i<=n;i++)
    {
        int ret=ask(i,1,i,n);
        if(ret%2!=0)
        {
            v1.pb(i);
        }
    }
    bool case1= (sz(v1)==2&&sz(v2)==2);
    bool case2= (sz(v1)==0&&sz(v2)==2);
    bool case3= (sz(v1)==2&&sz(v2)==0);
   // cout<<case1<<" "<<case2<<" "<<case3<<endl;
    vector< pair<int,int> > ans;
    if(case1)
    {
        for(int i=0;i<sz(v1);i++)
        {
            for(int j=0;j<sz(v2);j++)
            {
                int ret=ask(v1[i],v2[j],v1[i],v2[j]);

                if(ret==1)
                {
                    ans.pb(mp(v1[i],v2[j]));
                    break;
                }
            }
        }
    }
    else if(case2)
    {
       int ret1= BS(1,n,v2[0],0);
       ans.pb(mp(ret1,v2[0]));
       ans.pb(mp(ret1,v2[1]));
    }
    else if(case3)
    {
       int ret1= BS(1,n,v1[0],1);
       ans.pb(mp(v1[0],ret1));
       ans.pb(mp(v1[1],ret1));
    }


   cout<<"! "<<ans[0].first<<" "<<ans[0].second<<" "<<ans[1].first<<" "<<ans[1].second<<endl;
   fflush(stdout);

}



