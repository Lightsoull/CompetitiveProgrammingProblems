#include <bits/stdc++.h>
#define sz(v)   ((int)(v).size())
#define  all(v)    ((v).begin()),((v).end())
#define  allr(v)    ((v).rbegin()),((v).rend())
#define   pb         push_back
#define   mp         make_pair
#define   mt         make_tuple
//#define   Y            imag()
//#define   X            real()
#define    clr(v,d)      memset( v, d ,sizeof(v))
#define   angle(n)      atan2((n.imag()),(n.real()))
#define   vec(a,b)       ((b)-(a))
//#define   length(a)      hypot( (a.imag()),(a.real()) )
#define   normalize(a)      (a)/(length(a))
//#define    dp(a,b)          (((conj(a))*(b)).real())
//#define    cp(a,b)          (((conj(a))*(b)).imag())
#define    lengthsqrt(a)       dp(a,a)
#define    rotate0( a,ang)    ((a)*exp( point(0,ang) ))
#define    rotateA(about,p,ang)   (rotate0(vec(about,p),ang)+about)
#define    lcm(a,b)                ((a*b)/(__gcd(a,b)))
#define    reflection0(m,v)         (conj((v)/(m))*(m))
#define     reflectionA(m,v,p0)     (conj( (vec(p0,v))/(vec(p0,m)) ) * (vec(p0,m)) ) + p0
//#define     same(p1,p2)               ( dp(  vec(p1,p2),vec(p1,p2)) < eps )
#define     PT                    complex<double>
#define outfile freopen("out.out", "w", stdout);
#define infile  freopen("in.in", "r", stdin);
#define PI acos(-1)
#define scani(n)  scanf("%d",&n)
//#define scans(st) scanf("%s",st)
#define gc getchar_unlocked
typedef  long long     ll ;
typedef  unsigned long long ull;
const double eps= (1e-9);
using namespace std;
int dcmp(long double a,long double b){   return fabsl(a-b)<=eps ? 0: (a>b)? 1:-1  ;}
int getBit(int num, int idx) {return ((num >> idx) & 1) == 1;}
int setBit1(int num, int idx) {return num | (1<<idx);}
ll setBit0(ll num, int idx) {return num & ~(1ll<<idx);}
ll flipBit(int num, int idx) {return num ^ (1<<idx);}
void FS(){ ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);}
string st;
int main()
{

    int n,pos=0,cnt=0;
    cin>>n>>st;
    bool ok=1;
    for(int i=0;i<n;i++)
    {
        if(st[i]=='(')
            pos++;
        else if(st[i]==')')
            pos--;
        else
            cnt++;

    }
    if(abs(pos)>cnt)
    {
        cout<<":(";
        return 0;
    }

    if(pos<0)
    pos*=-1,cnt= pos+(cnt-pos)/2;
    else
    cnt= (cnt-pos)/2;

    int sum=0;
    for(int i=0;i<n&&ok;i++)
    {
        if(i&&sum==0)
            ok=0;

        if(st[i]=='(')
            sum++;
        else if(st[i]==')')
            sum--;
        else if(st[i]=='?')
        {
            if(cnt)
                sum++,st[i]='(',cnt--;
            else
                sum--,st[i]=')';
        }

        if(sum<0)
            ok=0;

    }

    if(ok==0)
        cout<<":(";
    else
        cout<<st<<endl;
}

