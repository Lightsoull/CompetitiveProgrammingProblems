#include <bits/stdc++.h>
#define sz(v)   ((int)(v).size())
#define  all(v)    ((v).begin()),((v).end())
#define  allr(v)    ((v).rbegin()),((v).rend())
#define   pb         push_back
#define   mp         make_pair
#define   mt         make_tuple
//#define   Y            imag()
//#define   X            real()
#define    clr(v,d)      memset( v, d ,sizeof(v))
#define   angle(n)      atan2((n.imag()),(n.real()))
#define   vec(a,b)       ((b)-(a))
//#define   length(a)      hypot( (a.imag()),(a.real()) )
#define   normalize(a)      (a)/(length(a))
//#define    dp(a,b)          (((conj(a))*(b)).real())
//#define    cp(a,b)          (((conj(a))*(b)).imag())
#define    lengthsqrt(a)       dp(a,a)
#define    rotate0( a,ang)    ((a)*exp( point(0,ang) ))
#define    rotateA(about,p,ang)   (rotate0(vec(about,p),ang)+about)
#define    lcm(a,b)                ((a*b)/(__gcd(a,b)))
#define    reflection0(m,v)         (conj((v)/(m))*(m))
#define     reflectionA(m,v,p0)     (conj( (vec(p0,v))/(vec(p0,m)) ) * (vec(p0,m)) ) + p0
//#define     same(p1,p2)               ( dp(  vec(p1,p2),vec(p1,p2)) < eps )
#define     PT                    complex<double>
#define outfile freopen("out.out", "w", stdout);
#define infile  freopen("in.in", "r", stdin);
#define PI acos(-1)
#define scani(n)  scanf("%d",&n)
//#define scans(st) scanf("%s",st)
#define gc getchar_unlocked
typedef  long long     ll ;
typedef  unsigned long long ull;
const double eps= (1e-9);
using namespace std;
int dcmp(long double a,long double b){   return fabsl(a-b)<=eps ? 0: (a>b)? 1:-1  ;}
int getBit(int num, int idx) {return ((num >> idx) & 1) == 1;}
int setBit1(int num, int idx) {return num | (1<<idx);}
ll setBit0(ll num, int idx) {return num & ~(1ll<<idx);}
ll flipBit(int num, int idx) {return num ^ (1<<idx);}
void FS(){ ios_base::sync_with_stdio(0); cin.tie(0); cout.tie(0);}
ll n;
vector<ll> v,v2;
vector< pair<ll,ll> > v1;
ll res[100009],suff[100009];
int main()
{
    cin>>n;
    for(int i=0;i<n;i++)
    {
        ll no;
        cin>>no;
        v.pb(no);
    }

    sort(all(v));

    int q;
    cin>>q;

    for(int i=0;i<q;i++)
    {
        ll no,l,r;
        cin>>l>>r;
        no= r-l;

        v1.pb(mp(no,i));
    }
    sort(allr(v1));

    ll myen= v1[0].first;
    ll id= v1[0].second;
    ll ans=0,str=-1;
    ans+= myen+1;


    for(int i=1;i<n;i++)
    {
        ll diff= v[i]-v[i-1];
        ll e1= v[i-1]+myen;
        if(v[i]>e1)
        {
            v2.pb(myen-1);
            ans+= myen+1;

        }
        else if(diff>=2)
        {
            v2.pb(diff-2);
            ans+=diff;

        }
        else if(diff<=1)
        {
            ans+=diff;
        }
    }

    res[id]=ans;

    sort(all(v2));
    ll s=0;
    for(int i=sz(v2)-1;i>=0;i--)
    {
        s+=v2[i];
        suff[i]=s;
    }

    for(int i=1;i<sz(v1);i++)
    {
        ll val=v1[i].first;
        ll id=lower_bound(all(v2),val)-v2.begin();
        ll num= sz(v2)-id;
        ll nans= ans;
        nans-= (myen+1);
        nans+= (val+1);
        ll a= suff[id]-num*val+num;
        nans-= a;

        res[v1[i].second]=nans;
    }

    for(int i=0;i<q;i++)
        cout<<res[i]<<" ";
    cout<<endl;

}
